function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

document.addEventListener("DOMContentLoaded", function () {
  var _$$slick;

  if (document.querySelectorAll(".indexpage").length > 0) {
    var scrollDown = function scrollDown() {
      var windowCoords = document.documentElement.clientHeight;

      (function scroll() {
        if (window.pageYOffset < windowCoords) {
          window.scrollBy(0, 10);
          setTimeout(scroll, 0);
        }

        if (window.pageYOffset > windowCoords) {
          window.scrollTo(0, windowCoords);
        }
      })();
    };

    var btnScrollDown = document.querySelector('.header .wrapper .arrow');
    btnScrollDown.addEventListener('click', scrollDown);
  }

  $(".block-with-employee").slick((_$$slick = {
    dots: false,
    slidesToShow: 1,
    rows: 3,
    adaptiveHeight: true,
    arrows: false,
    // fade: true,
    autoplay: true
  }, _defineProperty(_$$slick, "autoplay", true), _defineProperty(_$$slick, "autoplaySpeed", 1500), _defineProperty(_$$slick, "cssEase", 'linear'), _$$slick));
  $('.block-with-employee').on('afterChange', function (event, slick, currentSlide, nextSlide) {
    ScrollReveal().sync();
  });
  var delay = 100,
      duration = 600; // ScrollReveal().reveal('.parent,.header .logo,.header .icons,.header .arrow'); 

  ScrollReveal({
    reset: true
  }).reveal('.header .logo,.header .icons,.header .arrow,.navigation-panel .button,.start-game', {
    delay: delay,
    duration: duration
  });
});

function isAnyPartOfElementInViewport(el) {
  var rect = el.getBoundingClientRect();
  var windowHeight = window.innerHeight || document.documentElement.clientHeight;
  var windowWidth = window.innerWidth || document.documentElement.clientWidth; // http://stackoverflow.com/questions/325933/determine-whether-two-date-ranges-overlap

  var vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;
  var horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;
  return vertInView && horInView;
}